# Do not edit this file
# Editing this file manually might break Capima System
# If you think there is a bug, contact us at capima-bug@nntoan.com

server_name             APPDOMAINS;
server_tokens           off;
error_log               HOMEDIR/logs/nginx/APPNAME_error.log;
access_log              HOMEDIR/logs/nginx/APPNAME_access.log main buffer=16k;
access_log              /var/log/nginx-rc/APPNAME_traffic.log traffic;

client_max_body_size    256m;

include /etc/nginx-rc/conf.d/APPNAME.d/headers.conf;

root $MAGE_ROOT/pub;
index index.php;

include /etc/nginx-rc/extra.d/APPNAME.location.main-before.*.conf;

# Serve a non-nginx error page for all types of error
# Consider whether the client wants to have a different error page for 404 and any others. Error page must be customised.
error_page 400 401 402 403 404 405 406 407 408 409 410 411 412 413 414 415 416 417 418 420 422 423 424 426 428 429 431 444 449 450 451 500 501 502 503 504 505 506 507 508 509 510 511 @nginx_error;
location @nginx_error {
  root HOMEDIR/webapps/APPNAME/PUBLICPATH/pub/maintenance/$MAGE_RUN_CODE;
  rewrite ^(.*)$ /maintenance.html break;
  #never cache errors, don't think this is required but just being safe
  add_header Cache-Control "no-cache, no-store, must-revalidate" always;
  add_header Pragma "no-cache" always;
  add_header Expires 0 always;
  internal;
}

location = /healthcheck.php {
    fastcgi_pass   unix:/var/run/APPNAME.sock;
    fastcgi_index  index.php;
    fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;
    include        fastcgi_params;
    fastcgi_param  PHP_VALUE  "auto_prepend_file=$MAGE_ROOT/magento-vars.php";
}

location = /robots.txt {
    alias $MAGE_ROOT/pub/robots/robots.txt;
}

location = /sitemap.xml {
    alias $MAGE_ROOT/pub/sitemap/sitemap.xml;
}

# PHP entry point for setup application
location ~* ^/setup($|/) {
    root $MAGE_ROOT;
    location ~ ^/setup/index.php {
        fastcgi_pass   unix:/var/run/APPNAME.sock;
        fastcgi_index  index.php;
        fastcgi_param  MAGE_MODE "developer";
        fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;
        fastcgi_param  PHP_VALUE  "auto_prepend_file=$MAGE_ROOT/magento-vars.php";
        include        fastcgi_params;
    }

    location ~ ^/setup/(?!pub/). {
        deny all;
    }

    location ~ ^/setup/pub/ {
        add_header X-Frame-Options "SAMEORIGIN";
    }
}

# PHP entry point for update application
location ~* ^/update($|/) {
    root $MAGE_ROOT;

    location ~ ^/update/index.php {
        fastcgi_split_path_info ^(/update/index.php)(/.+)$;
        fastcgi_pass   unix:/var/run/APPNAME.sock;
        fastcgi_index  index.php;
        fastcgi_param  MAGE_MODE "developer";
        fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;
        fastcgi_param  PATH_INFO        $fastcgi_path_info;
        fastcgi_param  PHP_VALUE  "auto_prepend_file=$MAGE_ROOT/magento-vars.php";
        include        fastcgi_params;
    }

    # Deny everything but index.php
    location ~ ^/update/(?!pub/). {
        deny all;
    }

    location ~ ^/update/pub/ {
        add_header X-Frame-Options "SAMEORIGIN";
    }
}

location / {
    include /etc/nginx-rc/extra.d/APPNAME.location.root.*.conf;
    try_files $uri $uri/ /index.php$is_args$args;
}

location /pub/ {
    location ~ ^/pub/media/(downloadable|customer|import|custom_options|theme_customization/.*\.xml) {
        deny all;
    }
    alias $MAGE_ROOT/pub/;
    add_header X-Frame-Options "SAMEORIGIN";
}

location /static/ {
    # Uncomment the following line in production mode
    # expires max;

    # Remove signature of the static files that is used to overcome the browser cache
    location ~ ^/static/version {
        rewrite ^/static/(version\d*/)?(.*)$ /static/$2 last;
    }

    location ~* \.(ico|jpg|jpeg|png|gif|svg|js|css|swf|eot|ttf|otf|woff|woff2|html|json)$ {
        add_header Cache-Control "public";
        add_header X-Frame-Options "SAMEORIGIN";
        expires +1y;
        include /etc/nginx-rc/extra.d/APPNAME.location.static.common.*.conf;

        if (!-f $request_filename) {
            rewrite ^/static/(version\d*/)?(.*)$ /static.php?resource=$2 last;
        }
    }
    location ~* \.(zip|gz|gzip|bz2|csv|xml)$ {
        add_header Cache-Control "no-store";
        add_header X-Frame-Options "SAMEORIGIN";
        expires    off;
        include /etc/nginx-rc/extra.d/APPNAME.location.static.extra.*.conf;

        if (!-f $request_filename) {
           rewrite ^/static/(version\d*/)?(.*)$ /static.php?resource=$2 last;
        }
    }
    if (!-f $request_filename) {
        rewrite ^/static/(version\d*/)?(.*)$ /static.php?resource=$2 last;
    }
    add_header X-Frame-Options "SAMEORIGIN";
}

location /media/ {
    try_files $uri $uri/ /get.php$is_args$args;

    location ~ ^/media/theme_customization/.*\.xml {
        deny all;
    }

    location ~* \.(ico|jpg|jpeg|png|gif|svg|js|css|swf|eot|ttf|otf|woff|woff2)$ {
        add_header Cache-Control "public";
        add_header X-Frame-Options "SAMEORIGIN";
        expires +1y;
        include /etc/nginx-rc/extra.d/APPNAME.location.media.common.*.conf;
        try_files $uri $uri/ /get.php$is_args$args;
    }
    location ~* \.(zip|gz|gzip|bz2|csv|xml)$ {
        add_header Cache-Control "no-store";
        add_header X-Frame-Options "SAMEORIGIN";
        expires    off;
        include /etc/nginx-rc/extra.d/APPNAME.location.media.extra.*.conf;
        try_files $uri $uri/ /get.php$is_args$args;
    }
    add_header X-Frame-Options "SAMEORIGIN";
}

location /media/customer/ {
    deny all;
}

location /media/downloadable/ {
    deny all;
}

location /media/import/ {
    deny all;
}

location /media/custom_options/ {
    deny all;
}

location /errors/ {
    location ~* \.xml$ {
        deny all;
    }
}

# PHP entry point for main application
location ~ (index|get|static|report|404|503|opcache|healthcheck|_intellij_phpdebug_validator)\.php$ {
    if ($MAGE_MODE = "") {
        set $MAGE_MODE production;
    }
    include /etc/nginx-rc/conf.d/APPNAME.d/proxy.conf;
}

# Banned locations (only reached if the earlier PHP entry point regexes don't match)
location ~* (\.php$|\.phtml$|\.htaccess$|\.git) {
    deny all;
    access_log off;
    log_not_found off;
}

# Deny access to sensitive files
location /.user.ini {
    deny all;
    access_log off;
    log_not_found off;
}

location ~ /.well-known/acme-challenge {
    allow all;
    log_not_found off;
}

location ~ /\. {
    deny all;
    access_log off;
    log_not_found off;
}

location = /favicon.ico {
    log_not_found off;
}

include /etc/nginx-rc/extra.d/APPNAME.location.main.*.conf;
